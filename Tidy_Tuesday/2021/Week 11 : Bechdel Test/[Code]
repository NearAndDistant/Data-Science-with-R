#############################################
BECHDEL TEST
#############################################

library(tidyverse)
library(tidytext)
library(ggtext)
library(ggrepel)
library(extrafont)
library(showtext) ; showtext_auto()

############### IMPORTING ###################

raw_bechdel <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-03-09/raw_bechdel.csv')
movies <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-03-09/movies.csv')

font_add_google("Lobster" , "lobster")
font_add_google("Cabin Condensed" , "cabin condensed")

################ SELECT ###################

movies_ggplot <- select(movies, c("year" , "title" , "clean_test" , "awards"))

############### WRANGLE ##################

counter<-1
i<-1
movies_ggplot$awards <- tolower(movies_ggplot$awards)
movies_ggplot$oscars <- rep(NA,length(movies_ggplot$year))

for(i in 1:length(movies$imdb))
{
  if(isTRUE(str_detect(movies_ggplot$awards[i] , "(?<=won\\s).*(?=\\soscar)")))
    {counter<-counter+1
    movies_ggplot$oscars[i]<-"WINS"} 
  else{
  if(isTRUE(str_detect(movies_ggplot$awards[i] , "(?<=nominated\\sfor\\s).*(?=\\soscar)")))
     {counter<-counter+1
     movies_ggplot$oscars[i]<-"NOMINATIONS"}
  else{
    counter<-counter+1
    movies_ggplot$oscars[i]<-NA}}
}

##check report
#sum(str_count(movies_ggplot$oscars, pattern = "WINS"),na.rm = T)
#[1] 180
#sum(str_count(movies_ggplot$oscars , "NOMINATIONS"),na.rm = T)
#[1] 313

#as factors oscars
movies_ggplot$oscars <- as.factor(movies_ggplot$oscars)
levels(movies_ggplot$oscars) <- c("WINS" , "NOMINATIONS")

#Extract n of oscar nominations or won
movies_ggplot$oscars_n <- str_extract(movies_ggplot$awards , "(?<=won\\s).*(?=\\soscar)|(?<=nominated\\sfor\\s).*(?=\\soscar)")
movies_ggplot$oscars_n <- as.numeric(movies_ggplot$oscars_n)
movies_ggplot <- movies_ggplot %>% arrange(desc(oscars_n)) %>% arrange(oscars)

#as factor and levels
movies_ggplot$clean_test <- as.factor(movies_ggplot$clean_test)
movies_ggplot$clean_test <- ordered(movies_ggplot$clean_test, c(
                              "ok", 
                              "dubious", 
                              "men", 
                              "notalk", 
                              "nowomen"))

############### GGPLOT ##################

#labels and palette
facet_labels <- c("nomination" = "NOMINATIONS" , "won" = "WINS")

text <- "The Bechdel Test, invented by Alison Bechdel, assesses female representation in film using three criteria:<br><br>If the film has <span style='color:#6699CC;face: bold'>**NO WOMEN**</span>, or those women <span style='color:#669999'>**DO NOT CONVERSE**</span>, or <span style='color:#336666'>**CONVERSE ONLY ABOUT MEN**</span>, it fails Bechdel's test.<br>The film is described as <span style='color:lightgoldenrodyellow'>**DUBIOUS**</span> when the outcome of the test in unclear otherwise the film <span style='color:palevioletred'>**PASSES THE BECHDEL TEST**</span>.<br><br>**Using a dataset of 1794 films from 1971 to 2013, Oscar data was scraped for against The Bechdel Test to model how representative of women the Oscars are:**<br><br>From 1971-2013 there were:<br>- 180 Oscar nominations, of which <span style='color:palevioletred'>**43%**</span> passed Bechdel's Test<br>- 313 Oscar Wins, of which only <span style='color:palevioletred'>**37%**</span> passed Bechdel's Test"

palette <- c(                           
"ok" = "palevioletred", 
"dubious" = "lightgoldenrodyellow", 
"men" = "#336666", 
"notalk" = "#669999", 
"nowomen" = "#6699CC")

#ggplot
movies_ggplot%>%
drop_na(oscars)%>%
ggplot(aes(year , oscars_n , color = clean_test , size = oscars_n))+
geom_jitter()+
geom_text_repel(data = subset(movies_ggplot , oscars_n >= 7), aes(year , oscars_n , label = paste(title ,"(" , oscars_n , ")")), size = 2 , color = "white" , fontface = "bold.italic" , hjust = 1)+
facet_wrap(~oscars, ncol = 1 , strip.position = "left")+
scale_size(range=c(1,5), guide="none")+
scale_color_manual(values = palette)+
scale_y_continuous(limits = c(0, 12) , breaks=seq(0, 12, 1))+
  labs(
    title = 
      "BECHDEL  AT  THE  OSCARS .",
    subtitle = text,
    caption =
      "Source: FiveThirtyEight || Web: NearAndDistant.com | Twitter: @NearAndDistant | Git:  NearAndDistant")+
coord_cartesian(clip="off")+
#annotations 
  theme_void()+
  theme(
#panel
    plot.margin = margin(5,0,20,10),
    panel.spacing = unit(1.5, "lines"),
    strip.text = element_text(colour = 'white' , face = "bold" , size = 10 , vjust = 1),
#text
    plot.title=element_text(family="lobster" , color="white" , size=24 , vjust=1 , hjust=0), 
    plot.subtitle = element_markdown(family="cabin condensed" , color="white" , size=9 , vjust=62 , hjust=0), 
    plot.caption=element_text(color="white" , hjust=0.5 , vjust=-8 , size=8),
    plot.background = element_rect(fill = "grey25"),
    axis.text.x = element_text(color = "white", size = 14 , family="lobster"),
#legend
        legend.position = "blank")

############## PARTS ##############
<br><span style='font-size:10px'>Point size represent Oscar nominations/ wins recived (1-11)</span>
